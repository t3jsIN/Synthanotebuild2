workflows:
  ios-workflow:
    name: iOS Build
    max_build_duration: 120
    instance_type: mac_mini_m2
    environment:
      flutter: stable
      xcode: latest
      cocoapods: default
    cache:
      cache_paths:
        - ~/.pub-cache
        - $HOME/Library/Caches/CocoaPods
    triggering:
      events:
        - push
        - pull_request
      branch_patterns:
        - pattern: '*'
          include: true
          source: true
      cancel_previous_builds: false
    scripts:
      - name: Get Flutter packages
        script: flutter pub get
      - name: Clean up platform-specific packages
        script: |
          # Remove platform-specific packages that don't belong on iOS
          flutter pub deps --json | grep -E "record_linux|record_windows" || true
          # Clean any cached dependencies
          flutter clean
          flutter pub get
      - name: Install pods
        script: find . -name "Podfile" -execdir pod install \;
      - name: Build iOS
        script: flutter build ios --release --no-codesign
    artifacts:
      - build/ios/iphoneos/*.app
    publishing:
      email:
        recipients:
          - user@example.com
    
  web-workflow:
    name: Web Build
    max_build_duration: 60
    instance_type: linux_x2
    environment:
      flutter: stable
    cache:
      cache_paths:
        - ~/.pub-cache
    triggering:
      events:
        - push
        - pull_request
      branch_patterns:
        - pattern: '*'
          include: true
          source: true
      cancel_previous_builds: false
    scripts:
      - name: Get Flutter packages
        script: flutter pub get
      - name: Enable web
        script: flutter config --enable-web
      - name: Build web
        script: flutter build web --release
      - name: Deploy to Firebase Hosting (Alternative)
        script: |
          # Install Firebase CLI if not available
          npm install -g firebase-tools
          # Deploy to Firebase (requires FIREBASE_TOKEN environment variable)
          # firebase deploy --only hosting --token $FIREBASE_TOKEN
          echo "Web build completed. You can deploy to Firebase, Netlify, or other hosting services."
    artifacts:
      - build/web/
    publishing:
      email:
        recipients:
          - user@example.com
      scripts:
        - name: Custom deployment script
          script: |
            echo "You can add custom deployment scripts here"
            echo "For example: deploy to Firebase, Netlify, AWS S3, etc."
          
  android-workflow:
    name: Android Build
    max_build_duration: 120
    instance_type: linux_x2
    environment:
      flutter: stable
      java: 11
    cache:
      cache_paths:
        - ~/.pub-cache
        - ~/.gradle/caches
    triggering:
      events:
        - push
        - pull_request
      branch_patterns:
        - pattern: '*'
          include: true
          source: true
      cancel_previous_builds: false
    scripts:
      - name: Get Flutter packages
        script: flutter pub get
      - name: Build Android APK
        script: flutter build apk --release
      - name: Build Android App Bundle
        script: flutter build appbundle --release
    artifacts:
      - build/**/outputs/apk/**/*.apk
      - build/**/outputs/bundle/**/*.aab
      - build/**/outputs/**/mapping.txt
    publishing:
      email:
        recipients:
          - user@example.com
